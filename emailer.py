# emailer.py  –  UTF‑8‑safe, multi‑option version

import os
import smtplib
import re
import unicodedata
from datetime import datetime
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.header import Header
from email.utils import formataddr

# ---------- Helper -----------------------------------------------------------

def clean(text: str) -> str:
    """
    • Replace non‑breaking spaces
    • Normalize fancy Unicode
    • Drop any char that can’t round‑trip through UTF‑8
    """
    if not text:
        return ""
    text = text.replace("\xa0", " ")
    text = unicodedata.normalize("NFKC", text)
    return text.encode("utf-8", "ignore").decode("utf-8")

# ---------- Environment ------------------------------------------------------

GMAIL_USER = clean(os.getenv("GMAIL_USER", ""))
GMAIL_PASS = clean(os.getenv("GMAIL_APP_PASS", ""))
TO_EMAIL   = clean(os.getenv("TO_EMAIL", GMAIL_USER))

# Where your CTA buttons should point
GITHUB_OWNER = clean(os.getenv("GITHUB_OWNER", "Alritz-space"))   # ← change if needed
GITHUB_REPO  = clean(os.getenv("GITHUB_REPO",  "pm-ai-trend-agent"))

# ---------- Load post variants ----------------------------------------------

with open("linkedin_post.txt", encoding="utf-8") as f:
    raw = f.read()

# Split on delimiter lines like  --- OPTION 1 ---
variants_raw = re.split(r"--- OPTION \d+ ---", raw)[1:]   # skip header chunk
if not variants_raw:
    variants_raw = [raw]                                  # fallback: single post

# ---------- Build HTML blocks ------------------------------------------------

blocks = []
for idx, txt in enumerate(variants_raw, 1):
    safe_text = clean(txt).strip().replace("\n", "<br>")
    btn_link  = f"https://Alritz-space.github.io/pm-ai-trend-agent/choose.html?choice={idx}"
    block = f"""
      <h3>Option {idx}</h3>
      <div style="background:#f4f4f4;padding:10px;border-radius:6px;
                  font-family:monospace;font-size:14px;white-space:pre-wrap;">
          {safe_text}
      </div>
      <p>
        <a href="{btn_link}"
           style="background:#0072b1;color:white;padding:10px 20px;
                  border-radius:5px;text-decoration:none;">
           ✅ Use This Post
        </a>
      </p>
      <hr>
    """
    blocks.append(block)

html_body = f"""
<h2>Your AI + PM Trend for Today 🚀</h2>
<p>Below are <b>{len(blocks)} LinkedIn post options</b> generated by our LLM.
Click one to schedule:</p>
{''.join(blocks)}
<p style="font-size:12px;color:gray;">
    Sent automatically — {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
</p>
"""

# ---------- Compose email (UTF‑8 everywhere) ---------------------------------

msg = MIMEMultipart("alternative")
msg["Subject"] = str(Header("🧠 Your LinkedIn Post Options Are Ready", "utf-8"))
msg["From"]    = formataddr((str(Header("TrendBot", "utf-8")), GMAIL_USER))
msg["To"]      = TO_EMAIL
msg.attach(MIMEText(html_body, "html", _charset="utf-8"))

# ---------- Debug preview ----------------------------------------------------

print("📧 DEBUG — first 300 chars of payload:")
print(msg.as_string()[:300])
print("----------------------------------------------------------------------")

# ---------- Send via Gmail ---------------------------------------------------

try:
    with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
        server.login(GMAIL_USER, GMAIL_PASS)
        server.sendmail(GMAIL_USER, TO_EMAIL, msg.as_string())
    print("✅ Email sent successfully via Gmail.")
except Exception as e:
    print(f"❌ Failed to send email: {e}")
